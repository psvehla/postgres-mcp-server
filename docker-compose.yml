# docker-compose.yml
version: '3.8'

services:
  # db
  db:
    image: my-postgres-db
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mcp-network
    restart: unless-stopped

  # HTTP Server
  mcp-http:
    build:
      context: .
      platforms:
        - linux/amd64
      dockerfile: src/http/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - PORT=3000
      - HOST=0.0.0.0
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:8080,http://localhost:3000}
    networks:
      - mcp-network

    restart: unless-stopped

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://0.0.0.0:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
  mcp-stdio:
    build:
      context: .
      dockerfile: src/stdio/Dockerfile
    environment:
        - POSTGRES_USERNAME=${POSTGRES_USERNAME}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_HOST=${POSTGRES_HOST}
        - POSTGRES_DATABASE=${POSTGRES_DATABASE}
    networks:
      - mcp-network
    restart: "no"
    profiles:
      - stdio
    stdin_open: true
    tty: true

networks:
  mcp-network:
    driver: bridge

volumes:
  postgres_data:
